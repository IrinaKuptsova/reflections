How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Сравнивая код можно вычислить ошибку и исправить ее. Также помогает сэкономить время на устранение ошибки.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Работа над ошибками. Улучшить свой код. Легко перейти к версиям с работающим кодом и дальнейшей его отладке.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Плюсы автоматического сохранения: сохранения версий с частыми commit для эффективного устранения ошибок
    Минус: заграмождение проектами различными версиями проекта
    Плюс ручного сохранения: логическое комметирование
    Минус: забыть закоммитировать и потерять данные

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Commit это не один файл, а сочетание файлов, которые входят в один проект

How can you use the commands git log and git diff to view the history of files?

    Сравнивая коммиты можно увидить изменения в файлах.

How might using version control make you more confident to make changes that
could break something?

    Используя GIT можно быстрее найти ошибку, можно экспериметировать, что помогает тебе развиватьсяб т.к. ты можешь в любой момент откатиться на предыдущую версию.

Now that you have your workspace set up, what do you want to try using Git for?

    Хочу закоммитить свою первую версию. Научиться работать с GIT.




    crjkmrj vj;yj
